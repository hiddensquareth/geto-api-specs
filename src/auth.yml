openapi: 3.0.0
info:
  title: Auth
  description: API to manage authentication
  version: 1.0.0
components:
  schemas:
    DefaultResponse:
      type: object
      properties:
        message:
          type: string
          example: ok
    LoginUserWithLineRequestData:
      type: object
      required:
        - lineUserId
        - lineAccessToken
      properties:
        lineUserId:
          type: string
          minLength: 1
          maxLength: 1000
        lineAccessToken:
          type: string
          minLength: 1
          maxLength: 5000
    LoginUserWithLineReponseData:
      type: object
      required:
        - firebaseCustomToken
      properties:
        firebaseCustomToken:
          type: string
    LoginUserWithEmailRequestData:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          minLength: 1
          maxLength: 100
        password:
          type: string
          minLength: 1
          maxLength: 100
    LoginUserWithEmailReponseData:
      type: object
      required:
        - firebaseCustomToken
      properties:
        firebaseCustomToken:
          type: string
    InitiateLoginCmsRequestData:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          minLength: 1
          maxLength: 100
        password:
          type: string
          minLength: 1
          maxLength: 100
    InitiateLoginCmsResponseData:
      type: object
      required:
        - temporaryToken
        - qrCodeData
      properties:
        temporaryToken:
          type: string
        qrCodeData:
          type: string
    LoginCmsWithNewMfaRequestData:
      type: object
      required:
        - temporaryToken
        - otpCode
      properties:
        temporaryToken:
          type: string
          minLength: 1
          maxLength: 1000
        otpCode:
          type: string
          minLength: 1
          maxLength: 100
    LoginCmsWithNewMfaResponseData:
      type: object
      required:
        - firebaseCustomToken
      properties:
        firebaseCustomToken:
          type: string
    LoginCmsWithExistingMfaRequestData:
      type: object
      required:
        - temporaryToken
        - otpCode
      properties:
        temporaryToken:
          type: string
          minLength: 1
          maxLength: 1000
        otpCode:
          type: string
          minLength: 1
          maxLength: 100
    LoginCmsWithExistingMfaResponseData:
      type: object
      required:
        - firebaseCustomToken
      properties:
        firebaseCustomToken:
          type: string
    LinkUserWithOAuthProviderRequestData:
      type: object
      properties:
        token:
          type: string
          minLength: 1
          maxLength: 5000
        providerId:
          type: string
          minLength: 1
          maxLength: 50
        providerUserId:
          type: string
          minLength: 1
          maxLength: 100
    SendOtpRequestData:
      type: object
      required:
        - email
        - scope
      properties:
        email:
          type: string
          format: email
          pattern: '[^\.]+\.[^\.]+$'
          example: "maw-dev@littlepawcraft.com"
        scope:
          type: string
          minLength: 1
          maxLength: 100
    SendOtpResponseData:
      type: object
      required:
        - refToken
        - refCode
      properties:
        refToken:
          type: string
        refCode:
          type: string

paths:
  /auth/loginUserWithLine:
    post:
      tags:
        - auth
      summary: loginUserWithLine
      description: loginUserWithLine
      operationId: loginUserWithLine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserWithLineRequestData"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginUserWithLineReponseData"
  /auth/linkUserWithOAuthProvider:
    post:
      tags:
        - auth
      summary: linkUserWithOAuthProvider
      description: linkUserWithOAuthProvider
      operationId: linkUserWithOAuthProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkUserWithOAuthProviderRequestData"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
  /auth/loginUserWithEmail:
    post:
      tags:
        - auth
      summary: loginUserWithEmail
      description: loginUserWithEmail
      operationId: loginUserWithEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserWithEmailRequestData"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginUserWithEmailReponseData"
  /auth/initiateLoginCms:
    post:
      tags:
        - auth
      summary: initiateLoginCms
      description: initiateLoginCms
      operationId: initiateLoginCms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InitiateLoginCmsRequestData"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InitiateLoginCmsResponseData"
  /auth/loginCmsWithNewMfa:
    post:
      tags:
        - auth
      summary: loginCmsWithNewMfa
      description: loginCmsWithNewMfa
      operationId: loginCmsWithNewMfa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCmsWithNewMfaRequestData"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginCmsWithNewMfaResponseData"
  /auth/loginCmsWithExistingMfa:
    post:
      tags:
        - auth
      summary: loginCmsWithExistingMfa
      description: loginCmsWithExistingMfa
      operationId: loginCmsWithExistingMfa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCmsWithExistingMfaRequestData"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginCmsWithExistingMfaResponseData"
  /auth/sendOtp:
    post:
      tags:
        - auth
      summary: sendOtp
      description: sendOtp
      operationId: sendOtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendOtpRequestData"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendOtpResponseData"
